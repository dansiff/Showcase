// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String     @id @default(uuid())
  email       String     @unique
  name        String
  referrals   Referral[] // Referrals they've made
  websites    Website[]  // Websites they've requested
  createdAt   DateTime   @default(now())
}

model Referral {
  id          String    @id @default(uuid())
  referrerId  String
  referredId  String
  referrer    User      @relation("Referrer", fields: [referrerId], references: [id])
  referred    User      @relation("Referred", fields: [referredId], references: [id])
  commission  Float     @default(0.0)
  createdAt   DateTime  @default(now())
}

model Website {
  id             String     @id @default(uuid())
  userId         String
  user           User       @relation(fields: [userId], references: [id])
  projectDetails String     // JSON or markdown of the request
  tier           String     // e.g., "Starter", "Professional", "Enterprise"
  status         String     @default("Pending")
  createdAt      DateTime   @default(now())
}

model Service {
  id          String     @id @default(uuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  serviceType ServiceType
  status      ServiceStatus
  details     String     // JSON or markdown of the service details
  createdAt   DateTime   @default(now())
}
enum ServiceType {
  WEBSITE_DESIGN
  MARKETING
  SEO
  AD_CAMPAIGN
}

enum ServiceStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELED
}

enum UserRole {
  CLIENT
  ADMIN
  REFERRER
}
