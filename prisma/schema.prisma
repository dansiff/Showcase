// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String
  role        Role         @default(CLIENT)
  commissions Commission[] @relation("UserCommissions")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Commission {
  id          String           @id @default(uuid())
  userId      String
  user        User             @relation("UserCommissions", fields: [userId], references: [id], onDelete: Cascade)
  status      CommissionStatus @default(PENDING)
  description String
  price       Float
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  payments    Payment[]        @relation("CommissionPayments")
}

model Payment {
  id           String     @id @default(uuid())
  commissionId String
  commission   Commission @relation("CommissionPayments", fields: [commissionId], references: [id], onDelete: Cascade)
  amount       Float
  paidAt       DateTime   @default(now())
}

enum Role {
  CLIENT
  ADMIN
}

enum CommissionStatus {
  PENDING
  IN_PROGRESS
  COMPLETE
  CANCELLED
}
